/*
1. Какое будет выведено значение: let x = 5; alert( x++ ); ?

   Будет  5, потому что сначала отрисует, а потом посчитает (префикс vs постфикс).

2. Чему равно такое выражение: [ ] + false - null + true ?

    NaN

    1. Пустой массив преобразуется в пустую строку,
    2. [ ] + false будет false, где false это строка
    3. Когда мы пытаемся от строки отнять тип данных null, такая операция матеметически неверна и получаем NaN
    4. NaN + булин получается NaN

    Это задача на динамическую типизацию в JS (по простому - преобразование типов данных один в другой)

3. Что выведет этот код: let y = 1; let x = y = 2; alert(x); ?

    Выведет 2, потому что y переопределится по ходу выполнения кода

    В этой части y = 2 мы присваиваем переменной y значение 2, а затем это же значение идет в переменную x

4. Чему равна сумма [ ] + 1 + 2?

    12

    Пустой массив превращается в пустую строку, а дальше при сложении числа со строкой - все преобразуется в тип данных строка.

5. Что выведет этот код: alert( "1"[0] )?

    Сначала у нас есть строка, то есть "1"
    Строку можно разбить на символы и каждый из них получить 
    Если из строки "1" взять первый символ [0], то получится 1

6. Чему равно 2 && 1 && null && 0 && undefined ?

    Выведет null, так как оператор И возвращает первое ложное значение. 
    && вернет True только если все аргументы правдивы
    В логическом контексте в JS только 5 сущностей представляют собой неправду:
    (false) - это 0, пустая строка "" , null , undefined , NaN

    "ИЛИ запинается на правда, И запинается на лжи"

7. Есть ли разница между выражениями? !!( a && b ) и (a && b)?

    Есть, потому что !! превратит любую конструкцию в Boolean тип данных

8. Что выведет этот код: alert( null || 2 && 3 || 4 ); ?

    Выведет 3.
    
    Мы разбиваем этот кусочек кода на 3 части, начинаем считать по порядку. 
    ИЛИ возвращает всегда первое правдивое утверждение, поэтому слева, в операции ИЛИ - из двух частей вернет 2. 
    Справа ИЛИ вернет 3, последнее ерное утверждение.
    Оператор И сравнит 2 и 3 и вернет последнее - 3ку, потому что это первая правда. 

9. a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ?

    Нет. Это разные массивы, просто с одинаковыми значениями.

10. Что выведет этот код: alert( +"Infinity" ); ?

    Строку Infinity превращаем в число через унарный плюс, и получается числовой тип данных Бесконечность.

11. Верно ли сравнение: "Ёжик" > "яблоко"?

    Нет. Каждый символ зашифрован символами в юникоде. В соответствии с unicode кодировкой, ё стоит после я. 
    Регистр тоже влияет на символ юникода

12. Чему равно 0 || "" || 2 || undefined || true || falsе ?

    Вернет 2, так как это первое правдивое значение (true)

*/